apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName VERSION_NAME
        versionCode 1

        vectorDrawables.useSupportLibrary = true

        externalNativeBuild {
            ndkBuild {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    dependencies {
        compile 'io.getlime.core:rest-model-base:1.1.0'
        compile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
        compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
        compile "com.android.support:support-fragment:${rootProject.ext.supportLibVersion}"
        compile 'com.google.code.gson:gson:2.8.5'

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.robolectric:robolectric:4.0.2'
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.GROUP_ID
            artifactId project.ARTIFACT_ID
            version project.VERSION_NAME

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact(androidSourcesJar)
            artifact(androidJavadocsJar)

            // http://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }

        }
    }
}

apply from: 'android-release-aar.gradle'

